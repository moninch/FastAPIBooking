version: '3.7'
services:
  db:
    image: postgres:15
    container_name: booking_db
    volumes:
      - postgresdata:/var/lib/postgresql/data
    env_file:
      - .env-non-dev
    ports:
      - 5432:5432

  redis:
    image: redis:7
    container_name: booking_redis

  booking:
    image: booking_image
    build:
      context: .
    container_name: booking_app
    env_file:
      - .env-non-dev
    command: [ "/booking/docker/app.sh" ]
    ports:
      - 7777:8000
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER" ]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - db
      - redis

  celery:
    image: booking_celery
    build:
      context: .
    container_name: booking_celery
    command: [ "/booking/docker/celery.sh", "celery" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis

  flower:
    image: booking_flower
    build:
      context: .
    container_name: booking_flower
    command: [ "/booking/docker/celery.sh", "flower" ]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    ports:
      - 5555:5555

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - '3000:3000'

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    restart: unless-stopped

volumes:
  postgresdata:
  grafanadata:
  prometheusdata:
